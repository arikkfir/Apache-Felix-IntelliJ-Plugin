<idea-plugin version="2" url="https://github.com/arikkfir/Apache-Felix-IntelliJ-Plugin">

    <id>apache-felix-idea-plugin</id>
    <name>Apache Felix</name>
    <description><![CDATA[
        <html>
        <strong>Apache Felix/Maven-Bundle-Plugin support for IntelliJ IDEA 10</strong>

        <p>This plugin provides native IntelliJ IDEA support for developing, running and debugging OSGi
            projects developed using Apache Felix and the Apache Felix Maven Bundle Plugin.</p>

        <p>Using this plugin, developers can run and debug Apache Felix OSGi containers, allowing the user to
        choose bundles and modules for deployment. The developer can opt for deploying some of the bundles using hot-deploy
        mechanism (via Apache Felix File Install bundle), allowing for redeployment when bundles are rebuilt, utilizing
        OSGi's dynamic nature.</p>

        <p>The plugin provides a new type of run configuration: Apache Felix run configuration. The configuration of this
        run configuration allows the developer to choose which bundles to deploy, and the method of deployment (startup
        or hot-deploy). The list of available bundles for deployment is comprised of all modules with packaging of
        "bundle", and their dependencies. Non-Maven modules (or Maven modules not of packaging "bundle") are ignored.</p>

        <p><strong>NOTE: This plugin contains code snippets copied from Apache Felix's Maven Bundle Plugin. These were
        because there was no easy way to directly invoke the Maven plugin. It is the intention of this plugin writer
        to contact Apache Felix and work together to refactor the code so that it is easily invokable from outside the
        Maven execution context (e.g. in IDEA's Maven support context), and to eventually contribute the code to the
        Apache Felix project umbrella.</strong></p>

        <p>Developed by Arik Kfir at Infolinks Inc.</p>
        </html>
        ]]></description>
    <vendor email="arik.kfir@gmail.com">Arik Kfir</vendor>

    <version>1.1.11</version>
    <change-notes><![CDATA[
        <p>1.1.11 (development)</p>
        <ul>
            <li>Moved project to GitHub at https://github.com/arikkfir/Apache-Felix-IntelliJ-Plugin</li>
        </ul>

        <p>1.1.10</p>
        <ul>
            <li>Upgrade BND to 1.43.0</li>
            <li>Search for packages to import by scanning compiled classes in the output directory, rather than
            Java source files. This enables creating OSGi bundles with non-Java source code such as Groovy or
            Scala.</li>
        </ul>

        <p>1.1.9</p>
        <ul>
            <li>No code changes - but made the project public on Google Code at:
                https://code.google.com/p/apache-felix-intellij-plugin
            </li>
        </ul>

        <p>1.1.8</p>
        <ul>
            <li>Support customizing the Apache Felix File Install polling interval</li>
            <li>Minor UI improvements</li>
        </ul>

        <p>1.1.7</p>
        <ul>
            <li>Support showing custom log files in runner view</li>
        </ul>

        <p>1.1.6</p>
        <ul>
            <li>Show symbolic name in deployment view when no Bundle-Name header is found</li>
            <li>Ignore non-bundle JARs in deployment view
            </li>
            <li>Ignore test-scoped dependencies</li>
            <li>Clear Felix cache directory before running</li>
        </ul>

        <p>1.1.5</p>
        <ul>
            <li>Fix version sorting in bundle selection tables.</li>
            <li>Add an initial delay to hot-deployed bundles after startup.</li>
        </ul>

        <p>1.1.4</p>
        <ul>
            <li>Fixed path-related bugs on Windows.</li>
            <li>Felix distribution JARs (except 'felix.jar') are now copied to the bundles directory and are deployed
                like any other startup-deployment bundle.</li>
            <li>No longer setting custom Felix cache directory (caused problems on Windows machines). Instead, allowing
                Felix to decide for itself the appropriate location for its cache directory.</li>
        </ul>

        <p>1.1.3:</p>
        <ul>
            <li>Prevent some exceptions in rare cases</li>
        </ul>

        <p>1.1.2:</p>
        <ul>
            <li>Deployment directory sorting in deployment tab caused an error
            </li>
        </ul>

        <p>1.1.1:</p>
        <ul>
            <li>Improved column widths in run configuration's deployment tab
            </li>
        </ul>

        <p>1.1.0:</p>
        <ul>
            <li>Support for multiple hot-deployment directories (e.g. one for bundles, and another for watched
                configuration files, etc)
            </li>
            <li>Upgrade to Apache Felix File Install 3.1.10
            </li>
            <li>Support for deploying bundles without including their version in the file name</li>
            <li>Fix bug related to snapshot dependencies getting lost after project reload
            </li>
        </ul>

        <p>1.0.3:</p>
        <ul>
            <li>Always refresh OSGi facet on "Make", to make sure the JAR is updated correctly.
            </li>
            <li>Delete Felix cache before running/debugging
            </li>
            <li>Improve UI for Run Configuration Deployment Tab</li>
            <li>Run configuration's deployment methods were not saved
            </li>
            <li>Catch hot-deploy updated much quicker (reduced File Install's poll from 2 seconds to 0.5 second)</li>
            <li>Fixed a few bugs causing exceptions at times
            </li>
        </ul>

        <p>1.0.2:</p>
        <ul>
            <li>Prevent an error on Maven re-import
            </li>
            <li>Prevent running Felix if it is not configured properly in Settings/FelixFramework dialog
            </li>
            <li>Deploy Felix Framework bundles (gogo shell, repository) through command-line rather than copying to
                project bundles directory</li>
        </ul>
        <p>1.0.1:</p>
        <ul>
            <li>Make now triggers re-deployment of hot-deploy bundles when there's running OSGi processes
            </li>
            <li>Added action that triggers re-deployment of all hot-deploy bundles (in run tool window)
            </li>
        </ul>
        <p>1.0.0:</p>
        <ul>
            <li>Rewrite for IDEA X (from older Apache Felix for IDEA 9 plugin)
            </li>
            <li>Support for hot-deployment (via Apache Felix File Install)
            </li>
            <li>Performance improvements for bundle building
            </li>
        </ul>
        ]]></change-notes>

    <idea-version since-build="99.18"/>

    <!-- we depend on Maven integration API -->
    <depends>org.jetbrains.idea.maven</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!-- generates MANIFEST.MF during compilation -->
        <compiler implementation="com.infolinks.idea.plugins.felix.build.BundleCompiler"/>

        <!-- the OSGi Bundle facet type -->
        <facetType implementation="com.infolinks.idea.plugins.felix.facet.OsgiBundleFacetType"/>

        <!-- Felix run configuration type -->
        <configurationType implementation="com.infolinks.idea.plugins.felix.runner.FelixConfigurationType"/>

    </extensions>

    <extensions defaultExtensionNs="org.jetbrains.idea.maven">

        <!-- detects modules with "maven-bundle-plugin" plugin and creates OsgiBundleFacet for them -->
        <importer implementation="com.infolinks.idea.plugins.felix.facet.OsgiBundleFacetImporter"/>

    </extensions>

    <application-components>

        <!-- manages the Felix Framework installation(s) -->
        <component>
            <implementation-class>com.infolinks.idea.plugins.felix.framework.FelixFrameworkManager
            </implementation-class>
            <interface-class>com.infolinks.idea.plugins.felix.framework.FelixFrameworkManager</interface-class>
        </component>

    </application-components>

    <project-components>

        <!-- manages BundleInfo objects for virtual files -->
        <component>
            <implementation-class>com.infolinks.idea.plugins.felix.bundle.BundleInfoManager</implementation-class>
        </component>

        <!-- performs bundle deployment to felix bundles/hot-deploy dirs -->
        <component>
            <implementation-class>com.infolinks.idea.plugins.felix.runner.FelixBundlesDeployer</implementation-class>
        </component>

    </project-components>

    <module-components>
        <component>
            <implementation-class>com.infolinks.idea.plugins.felix.build.BundleInstructionsHelper</implementation-class>
        </component>
    </module-components>

</idea-plugin>
